/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  TherapistProfile as PrismaTherapistProfile,
} from "@prisma/client";

export class TherapistProfileServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TherapistProfileCountArgs, "select">
  ): Promise<number> {
    return this.prisma.therapistProfile.count(args);
  }

  async therapistProfiles(
    args: Prisma.TherapistProfileFindManyArgs
  ): Promise<PrismaTherapistProfile[]> {
    return this.prisma.therapistProfile.findMany(args);
  }
  async therapistProfile(
    args: Prisma.TherapistProfileFindUniqueArgs
  ): Promise<PrismaTherapistProfile | null> {
    return this.prisma.therapistProfile.findUnique(args);
  }
  async createTherapistProfile(
    args: Prisma.TherapistProfileCreateArgs
  ): Promise<PrismaTherapistProfile> {
    return this.prisma.therapistProfile.create(args);
  }
  async updateTherapistProfile(
    args: Prisma.TherapistProfileUpdateArgs
  ): Promise<PrismaTherapistProfile> {
    return this.prisma.therapistProfile.update(args);
  }
  async deleteTherapistProfile(
    args: Prisma.TherapistProfileDeleteArgs
  ): Promise<PrismaTherapistProfile> {
    return this.prisma.therapistProfile.delete(args);
  }
}
