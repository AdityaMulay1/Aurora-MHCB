/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UserPost as PrismaUserPost } from "@prisma/client";

export class UserPostServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.UserPostCountArgs, "select">): Promise<number> {
    return this.prisma.userPost.count(args);
  }

  async userPosts(
    args: Prisma.UserPostFindManyArgs
  ): Promise<PrismaUserPost[]> {
    return this.prisma.userPost.findMany(args);
  }
  async userPost(
    args: Prisma.UserPostFindUniqueArgs
  ): Promise<PrismaUserPost | null> {
    return this.prisma.userPost.findUnique(args);
  }
  async createUserPost(
    args: Prisma.UserPostCreateArgs
  ): Promise<PrismaUserPost> {
    return this.prisma.userPost.create(args);
  }
  async updateUserPost(
    args: Prisma.UserPostUpdateArgs
  ): Promise<PrismaUserPost> {
    return this.prisma.userPost.update(args);
  }
  async deleteUserPost(
    args: Prisma.UserPostDeleteArgs
  ): Promise<PrismaUserPost> {
    return this.prisma.userPost.delete(args);
  }
}
