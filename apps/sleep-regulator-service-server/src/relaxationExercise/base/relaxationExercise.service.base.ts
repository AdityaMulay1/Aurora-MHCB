/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  RelaxationExercise as PrismaRelaxationExercise,
} from "@prisma/client";

export class RelaxationExerciseServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RelaxationExerciseCountArgs, "select">
  ): Promise<number> {
    return this.prisma.relaxationExercise.count(args);
  }

  async relaxationExercises(
    args: Prisma.RelaxationExerciseFindManyArgs
  ): Promise<PrismaRelaxationExercise[]> {
    return this.prisma.relaxationExercise.findMany(args);
  }
  async relaxationExercise(
    args: Prisma.RelaxationExerciseFindUniqueArgs
  ): Promise<PrismaRelaxationExercise | null> {
    return this.prisma.relaxationExercise.findUnique(args);
  }
  async createRelaxationExercise(
    args: Prisma.RelaxationExerciseCreateArgs
  ): Promise<PrismaRelaxationExercise> {
    return this.prisma.relaxationExercise.create(args);
  }
  async updateRelaxationExercise(
    args: Prisma.RelaxationExerciseUpdateArgs
  ): Promise<PrismaRelaxationExercise> {
    return this.prisma.relaxationExercise.update(args);
  }
  async deleteRelaxationExercise(
    args: Prisma.RelaxationExerciseDeleteArgs
  ): Promise<PrismaRelaxationExercise> {
    return this.prisma.relaxationExercise.delete(args);
  }
}
